buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    google()
    mavenCentral()
    jcenter()
}

dependencies {
    api 'com.squareup.okhttp3:okhttp:3.10.0'
    api "io.reactivex.rxjava2:rxjava:2.2.4"
    api "io.reactivex.rxjava2:rxkotlin:2.3.0"
    implementation "com.google.code.findbugs:jsr305:3.0.2"

    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-all:1.9.5'
    testImplementation 'com.google.truth:truth:0.25'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}
group = "com.appunite"
archivesBaseName = "websockets-rxjava"
version = "4.0.1"

if (!project.hasProperty("ossrhUsername")) {
    project.ext.setProperty("ossrhUsername", null)
}
if (!project.hasProperty("ossrhPassword")) {
    project.ext.setProperty("ossrhPassword", null)
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(
                        userName: project.ext.getProperty("ossrhUsername"),
                        password: project.ext.getProperty("ossrhPassword")
                )
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(
                        userName: project.ext.getProperty("ossrhUsername"),
                        password: project.ext.getProperty("ossrhPassword")
                )
            }

            pom.project {
                name 'RxJavaWebsocketClient'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'RxJavaWebsocketClient is simple library for Websocket connection for java and Android. It is designed to be fast and fault tolerant.'
                url 'https://github.com/jacek-marchwicki/JavaWebsocketClient'

                scm {
                    connection 'scm:git:https://github.com/jacek-marchwicki/JavaWebsocketClient.git'
                    developerConnection 'scm:git:https://github.com/jacek-marchwicki/JavaWebsocketClient.git'
                    url 'https://github.com/jacek-marchwicki/JavaWebsocketClient.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'jacek'
                        name 'Jacek Marchwicki'
                        email 'jacek.marchwicki@gmail.com'
                    }
                }
            }
        }
    }
}
